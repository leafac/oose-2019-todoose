{
	"info": {
		"_postman_id": "39085907-721e-4eb8-bff4-278f56321cb4",
		"name": "TODOOSE",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get TODO items",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1fd2ce41-9164-4ba6-9279-2c10ad933cd6",
						"exec": [
							"pm.test(\"Status code is 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response JSON is a list\", () => {",
							"    pm.expect(pm.response.json()).to.be.an(\"array\");",
							"});",
							"pm.test(\"Items have identifier and description\", () => {",
							"    pm.response.json().forEach(item => {",
							"        // TODO: Missing one key.",
							"        pm.expect(item).to.have.all.keys(\"identifier\", \"description\");",
							"    });",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "4f997152-b08a-4810-8647-2f1238960c07",
						"exec": [
							"pm.sendRequest({ url: \"http://localhost:7000/items\", method: \"POST\" });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:7000/items",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"items"
					]
				}
			},
			"response": [
				{
					"name": "Successful",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost/items",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"items"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": "[\n\t{\"identifier\": 1, \"description\": \"Read TODO items\", \"completed\": false},\n\t{\"identifier\": 2, \"description\": \"Create new TODO items\", \"completed\": false},\n\t{\"identifier\": 3, \"description\": \"Edit TODO item\", \"completed\": false},\n\t{\"identifier\": 4, \"description\": \"Mark items as DONE\", \"completed\": false}\n]\n"
				}
			]
		},
		{
			"name": "Create new TODO item",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "31bba8ee-2938-4282-be95-0d30dd5be307",
						"exec": [
							"pm.test(\"Status code is 201\", () => {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Identifiers are always increasing\", () => {",
							"    pm.sendRequest(\"http://localhost:7000/items\", (err, response) => {",
							"        const identifiers = response.json().map(item => item.identifier).reverse();",
							"        pm.expect(identifiers[0]).to.be.equal(identifiers[1] + 1);",
							"    });",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "76cc81c7-59ab-4d79-aff0-20b9817df1e4",
						"exec": [
							"pm.sendRequest({ url: \"http://localhost:7000/items\", method: \"POST\" });",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": []
				},
				"url": {
					"raw": "http://localhost:7000/items",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"items"
					]
				}
			},
			"response": [
				{
					"name": "Successful",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "http://localhost/items",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"path": [
								"items"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Mark item as done",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1f28be8a-b12f-4544-ab1f-05458edd4a96",
						"exec": [
							"pm.test(\"Status code is 204\", () => {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							"pm.test(\"Item is marked as completed\", () => {",
							"    pm.sendRequest(\"http://localhost:7000/items\", (err, response) => {",
							"        pm.expect(",
							"            response.json().find(item => item.identifier === parseInt(pm.environment.get(\"itemIdentifier\"))).completed",
							"        ).to.be.true;",
							"    });",
							"});",
							"",
							"pm.test(\"Status code is 404 if item isn’t found\", () => {",
							"    pm.sendRequest({ url: \"http://localhost:7000/items/51039\", method: \"DELETE\" }, (err, response) => {",
							"        pm.expect(response).to.have.status(404);",
							"    });",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "1f042eff-532a-4075-84f7-e8397e6b5393",
						"exec": [
							"pm.sendRequest({ url: \"http://localhost:7000/items\", method: \"POST\" }, () => {",
							"    pm.sendRequest(\"http://localhost:7000/items\", (err, response) => {",
							"        pm.environment.set(\"itemIdentifier\", response.json().last().identifier);",
							"    });",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/x-www-form-urlencoded",
						"type": "text"
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "completed",
							"value": "true",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:7000/items/{{itemIdentifier}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"items",
						"{{itemIdentifier}}"
					]
				}
			},
			"response": [
				{
					"name": "Successful",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "completed",
									"value": "true",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:7000/items/7",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "7000",
							"path": [
								"items",
								"7"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Mark items as incomplete",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1f28be8a-b12f-4544-ab1f-05458edd4a96",
						"exec": [
							"pm.test(\"Status code is 204\", () => {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							"pm.test(\"Item is marked as incomplete\", () => {",
							"    pm.sendRequest(\"http://localhost:7000/items\", (err, response) => {",
							"        pm.expect(",
							"            response.json().find(item => item.identifier === parseInt(pm.environment.get(\"itemIdentifier\"))).completed",
							"        ).to.be.false;",
							"    });",
							"});",
							"",
							"pm.test(\"Status code is 404 if item isn’t found\", () => {",
							"    pm.sendRequest({ url: \"http://localhost:7000/items/51039\", method: \"DELETE\" }, (err, response) => {",
							"        pm.expect(response).to.have.status(404);",
							"    });",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "1f042eff-532a-4075-84f7-e8397e6b5393",
						"exec": [
							"pm.sendRequest({ url: \"http://localhost:7000/items\", method: \"POST\" }, () => {",
							"    pm.sendRequest(\"http://localhost:7000/items\", (err, response) => {",
							"        pm.environment.set(\"itemIdentifier\", response.json().last().identifier);",
							"        // TODO: Mark the item as complete, to make the test actually test something.",
							"        // Hint 1: Send a request similar to the POST request above, but with a PUT method instead, because we aren’t creating an item; we’re modifying it, to mark it as complete.",
							"        // Hint 2: To make this request work, you need to include some form data, similar to how we do that in the “Mark item as done” request. Except that here you’re doing that programmatically.",
							"        // Hint 3: To do that, you need to look up the documentation for .sendRequest() and use the mode called \"formdata\".",
							"    });",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "completed",
							"value": "false",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:7000/items/{{itemIdentifier}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"items",
						"{{itemIdentifier}}"
					]
				}
			},
			"response": [
				{
					"name": "Successful",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "completed",
									"value": "false",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:7000/items/7",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "7000",
							"path": [
								"items",
								"7"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		},
		{
			"name": "Edit item description",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "1f28be8a-b12f-4544-ab1f-05458edd4a96",
						"exec": [
							"pm.test(\"Status code is 204\", () => {",
							"    pm.response.to.have.status(204);",
							"});",
							"",
							"pm.test(\"Item is edited\", () => {",
							"    pm.sendRequest(\"http://localhost:7000/items\", (err, response) => {",
							"        pm.expect(response.json().last().description).to.equal(\"some description\");",
							"    });",
							"});",
							"",
							"pm.test(\"Status code is 404 if item isn’t found\", () => {",
							"    pm.sendRequest({ url: \"http://localhost:7000/items/51039\", method: \"PUT\" }, (err, response) => {",
							"        pm.expect(response).to.have.status(404);",
							"    });",
							"});",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "1f042eff-532a-4075-84f7-e8397e6b5393",
						"exec": [
							"pm.sendRequest({ url: \"http://localhost:7000/items\", method: \"POST\" }, () => {",
							"    pm.sendRequest(\"http://localhost:7000/items\", (err, response) => {",
							"        pm.environment.set(\"itemIdentifier\", response.json().last().identifier);",
							"    });",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "description",
							"value": "some description",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:7000/items/{{itemIdentifier}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "7000",
					"path": [
						"items",
						"{{itemIdentifier}}"
					]
				}
			},
			"response": [
				{
					"name": "Successful",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "description",
									"value": "whatever",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://localhost:7000/items/7",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "7000",
							"path": [
								"items",
								"7"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "Text",
					"header": [],
					"cookie": [],
					"body": ""
				}
			]
		}
	],
	"protocolProfileBehavior": {}
}